swagger: "2.0"
info:
  version: 1.0.0
  title: chat-mais-api
  description: Repository of APIs
  contact:
    name: mateusxis
    email: mateusx@poli.ufrj.br
host: localhost
basePath: /api/
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /login:
    post:
      tags: 
      - Login
      description: Login of user
      operationId: login
      parameters:
        - name: login
          in: body
          description: user will login
          required: true
          schema:
            $ref: '#/definitions/login'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/user'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
  /logout/{id}:
    post:
      tags: 
      - Login
      description: Logout of user
      operationId: logout
      parameters:
        - name: id
          in: path
          description: _id of user
          required: true
          type: string
      responses:
        200:
          description: OK
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
  /messages:
    get:
      tags: 
      - Messages
      description: |
        Return messages saved in database
      operationId: showMessage
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/message'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
    post:
      tags: 
      - Messages
      description: messages save in database
      operationId: storeMessage
      parameters:
        - name: message
          in: body
          description: message will saved in database.
          required: true
          schema:
            $ref: '#/definitions/message'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/message'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
  /messages/{id}:
    delete:
      tags: 
      - Messages
      description: Delete message in database by _id
      operationId: deleteMessage
      parameters:
        - name: id
          in: path
          description: _id of message
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/message'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
    get:
      tags:
      - Messages
      description: Return one message by _id
      operationId: indexMessage
      parameters:
        - name: id
          in: path
          description: _id of message
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/message'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
    put:
      tags: 
      - Messages
      description: Update message in database by _id
      operationId: updateMessage
      parameters:
        - name: id
          in: path
          description: _id of message
          required: true
          type: string
        - name: message
          in: body
          description: message will uptade in database
          required: true
          schema:
            $ref: '#/definitions/message'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/message'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
  /users:
    get:
      tags: 
      - Users
      description: |
        Return users saved in database
      operationId: showMessage
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/user'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
    post:
      tags: 
      - Users
      description: users save in database
      operationId: storeMessage
      parameters:
        - name: user
          in: body
          description: user will saved in database.
          required: true
          schema:
            $ref: '#/definitions/user'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/user'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
  /users/{id}:
    delete:
      tags: 
      - Users
      description: Delete user in database by _id
      operationId: deleteMessage
      parameters:
        - name: id
          in: path
          description: _id of user
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/user'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
    get:
      tags:
      - Users
      description: Return one user by _id
      operationId: indexMessage
      parameters:
        - name: id
          in: path
          description: _id of user
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/user'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
    put:
      tags: 
      - Users
      description: Update user in database by _id
      operationId: updateMessage
      parameters:
        - name: id
          in: path
          description: _id of user
          required: true
          type: string
        - name: user
          in: body
          description: user will uptade in database
          required: true
          schema:
            $ref: '#/definitions/user'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/user'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
definitions:
  login:
    type:
      object
    properties:
      nickname:
        type: string
  message:
    type:
      object
    properties:
      _id:
        type: string
      userId:
        type: string
      message:
        type: string
    required:
      - _id
  user:
    type:
      object
    properties:
      _id:
        type: string
      nickname:
        type: string
      socket:
        type: string
      active:
        type: integer
    required:
      - _id
  Error:
    required:
      - code
      - error
    properties:
      code:
        type: integer
        format: int32
      error:
        type: string
